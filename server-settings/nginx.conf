events {
  worker_connections 1024;
}

http {

  large_client_header_buffers 4 32k;

  # Automatically redirect all incomming HTTP reuqests to HTTPS
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # Jira server reverse proxy
  server {
    server_name jira.internal;
    proxy_read_timeout 600s;
    location / {
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://jira:8080;
      client_max_body_size 10M;
    }
  } 

  # GitLab server reverse proxy
  server {
    listen 443 ssl;
    ssl_certificate      /etc/cert/cert.pem;
    ssl_certificate_key  /etc/cert/key.pem;

    server_name t1-git-01;

    location / {
      resolver 127.0.0.11 valid=30s;
      set $upstream_gitlab gitlab;
      proxy_pass http://$upstream_gitlab:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}

# Kerberos request reverse stream proxy
stream {
   server {
    listen 8443 ssl;
    ssl_certificate      /etc/cert/cert.pem;
    ssl_certificate_key  /etc/cert/key.pem;

    resolver 127.0.0.11 valid=30s;
    proxy_pass gitlab:8443;
  }
}